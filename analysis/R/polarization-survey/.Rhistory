legend.text = element_text(size = 12),              # Legend text font
legend.spacing.y = unit(5, "mm")                    # Add spacing between groups
)
colors = c("machine_0" = "#A0D6F5",  # Lighter red for machine, TreatedIsLessPolar = 0
"human_0"   = "#F2B44D",  # Medium red for human, TreatedIsLessPolar = 0
"placebo_0" = "#66C9A8",  # Darker red for placebo, TreatedIsLessPolar = 0
"machine_1" = "#56B4E9",  # Lighter green for machine, TreatedIsLessPolar = 1
"human_1"   = "#E69F00",  # Medium green for human, TreatedIsLessPolar = 1
"placebo_1" = "#009E73")  # Darker green for placebo, TreatedIsLessPolar = 1
# Create a new variable to combine TreatmentGroup and TreatedIsLessPolar
survey_data$GroupPolar = paste(survey_data$TreatmentGroup, survey_data$TreatedIsLessPolar, sep = "_")
treat_less_polar = ggplot(survey_data, aes(x = TreatmentGroup, fill = GroupPolar)) +
geom_bar(position = "stack", color = "black", alpha = 0.9, width = 0.6) +
geom_text(
aes(
label = after_stat(count)
),
stat = "count",
position = position_stack(vjust = 0.5),  # Center the text inside the bars
size = 4,  # Text size
color = "black"  # Black text color for counts
) +
labs(
title = "TreatmentIsLessPolar by Treatment Group",
x = "Treatment Group",
y = "Count",
fill = "Treatment is\nLess Polar"
) +
scale_fill_manual(
values = colors,  # Use the custom color palette
labels = c(
"machine_0" = "Machine (0)", "human_0" = "Human (0)", "placebo_0" = "Placebo (0)",
"machine_1" = "Machine (1)", "human_1" = "Human (1)", "placebo_1" = "Placebo (1)"
)
) +
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Larger title font
axis.title = element_text(size = 14),               # Axis title font
axis.text = element_text(size = 12),                # Axis text font
legend.title = element_text(size = 14),             # Legend title font
legend.text = element_text(size = 12)               # Legend text font
)
ggsave("treat_less_polar.pdf",
plot = treat_less_polar,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
treat_less_polar
library(ggplot2)
# Define a custom palette for each TreatmentGroup and TreatedIsLessPolar combination
colors = c("machine_0" = "#FF9999",  # Light red for machine, TreatedIsLessPolar = 0
"machine_1" = "#99FF99",  # Light green for machine, TreatedIsLessPolar = 1
"human_0"   = "#FF6666",  # Medium red for human, TreatedIsLessPolar = 0
"human_1"   = "#66FF66",  # Medium green for human, TreatedIsLessPolar = 1
"placebo_0" = "#FF3333",  # Dark red for placebo, TreatedIsLessPolar = 0
"placebo_1" = "#33FF33")  # Dark green for placebo, TreatedIsLessPolar = 1
# Create a new variable to combine TreatmentGroup and TreatedIsLessPolar
survey_data$GroupPolar = paste(survey_data$TreatmentGroup, survey_data$TreatedIsLessPolar, sep = "_")
# Define custom labels with spacing
custom_labels = c(
"Machine (0)", "Machine (1)",
" ",  # Blank for spacing
"Human (0)", "Human (1)",
"  ", # Blank for spacing
"Placebo (0)", "Placebo (1)"
)
# Define custom breaks to match the order
custom_breaks = c("machine_0", "machine_1",
NA,  # For spacing
"human_0", "human_1",
NA,  # For spacing
"placebo_0", "placebo_1")
# Create the plot
treat_less_polar = ggplot(survey_data, aes(x = TreatmentGroup, fill = GroupPolar)) +
geom_bar(position = "stack", color = "black", alpha = 0.8, width = 0.6) +
geom_text(
aes(
label = after_stat(count)
),
stat = "count",
position = position_stack(vjust = 0.5),  # Center the text inside the bars
size = 4,  # Text size
color = "black"  # Black text color for counts
) +
labs(
title = "TreatmentIsLessPolar by Treatment Group",
x = "Treatment Group",
y = "Count",
fill = "Treatment is\nLess Polar"
) +
scale_fill_manual(
values = colors,  # Use the custom color palette
breaks = c("machine_0", "machine_1", "human_0", "human_1", "placebo_0", "placebo_1"),  # Define ordering
labels = custom_labels  # Use custom labels for the legend
) +
guides(fill = guide_legend(nrow = 3, byrow = TRUE)) +  # Arrange the legend in rows
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Larger title font
axis.title = element_text(size = 14),               # Axis title font
axis.text = element_text(size = 12),                # Axis text font
legend.title = element_text(size = 14),             # Legend title font
legend.text = element_text(size = 12),              # Legend text font
legend.spacing.y = unit(5, "mm")                    # Add spacing between groups
)
colors = c("machine_0" = "#A0D6F5",  # Lighter red for machine, TreatedIsLessPolar = 0
"human_0"   = "#F2B44D",  # Medium red for human, TreatedIsLessPolar = 0
"placebo_0" = "#66C9A8",  # Darker red for placebo, TreatedIsLessPolar = 0
"machine_1" = "#56B4E9",  # Lighter green for machine, TreatedIsLessPolar = 1
"human_1"   = "#E69F00",  # Medium green for human, TreatedIsLessPolar = 1
"placebo_1" = "#009E73")  # Darker green for placebo, TreatedIsLessPolar = 1
# Create a new variable to combine TreatmentGroup and TreatedIsLessPolar
survey_data$GroupPolar = paste(survey_data$TreatmentGroup, survey_data$TreatedIsLessPolar, sep = "_")
treat_less_polar = ggplot(survey_data, aes(x = TreatmentGroup, fill = GroupPolar)) +
geom_bar(position = "stack", color = "black", alpha = 0.9, width = 0.6) +
geom_text(
aes(
label = after_stat(count)
),
stat = "count",
position = position_stack(vjust = 0.5),  # Center the text inside the bars
size = 4,  # Text size
color = "black"  # Black text color for counts
) +
labs(
title = "TreatmentIsLessPolar by Treatment Group",
x = "Treatment Group",
y = "Count",
fill = "Treatment is\nLess Polar"
) +
scale_fill_manual(
values = colors,  # Use the custom color palette
labels = c(
"machine_0" = "Machine (0)", "human_0" = "Human (0)", "placebo_0" = "Placebo (0)",
"machine_1" = "Machine (1)", "human_1" = "Human (1)", "placebo_1" = "Placebo (1)"
)
) +
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Larger title font
axis.title = element_text(size = 14),               # Axis title font
axis.text = element_text(size = 12),                # Axis text font
legend.title = element_text(size = 14),             # Legend title font
legend.text = element_text(size = 12)               # Legend text font
)
ggsave("treat_less_polar.pdf",
plot = treat_less_polar,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
treat_less_polar
colors = c("machine_0" = "#C0E4FA",  # Lighter red for machine, TreatedIsLessPolar = 0
"human_0"   = "#F6C375",  # Medium red for human, TreatedIsLessPolar = 0
"placebo_0" = "#8AD7BD",  # Darker red for placebo, TreatedIsLessPolar = 0
"machine_1" = "#56B4E9",  # Lighter green for machine, TreatedIsLessPolar = 1
"human_1"   = "#E69F00",  # Medium green for human, TreatedIsLessPolar = 1
"placebo_1" = "#009E73")  # Darker green for placebo, TreatedIsLessPolar = 1
# Create a new variable to combine TreatmentGroup and TreatedIsLessPolar
survey_data$GroupPolar = paste(survey_data$TreatmentGroup, survey_data$TreatedIsLessPolar, sep = "_")
treat_less_polar = ggplot(survey_data, aes(x = TreatmentGroup, fill = GroupPolar)) +
geom_bar(position = "stack", color = "black", alpha = 0.9, width = 0.6) +
geom_text(
aes(
label = after_stat(count)
),
stat = "count",
position = position_stack(vjust = 0.5),  # Center the text inside the bars
size = 4,  # Text size
color = "black"  # Black text color for counts
) +
labs(
title = "TreatmentIsLessPolar by Treatment Group",
x = "Treatment Group",
y = "Count",
fill = "Treatment is\nLess Polar"
) +
scale_fill_manual(
values = colors,  # Use the custom color palette
labels = c(
"machine_0" = "Machine (0)", "human_0" = "Human (0)", "placebo_0" = "Placebo (0)",
"machine_1" = "Machine (1)", "human_1" = "Human (1)", "placebo_1" = "Placebo (1)"
)
) +
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Larger title font
axis.title = element_text(size = 14),               # Axis title font
axis.text = element_text(size = 12),                # Axis text font
legend.title = element_text(size = 14),             # Legend title font
legend.text = element_text(size = 12)               # Legend text font
)
ggsave("treat_less_polar.pdf",
plot = treat_less_polar,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
treat_less_polar
install.packages(gtsummary)
install.packages("gtsummary")
library(lmerTest)
library(lme4)
library(report)
library(gtsummary)
library("gtsummary", dependences = TRUE)
library("gtsummary", denpendences = TRUE)
install.packages("gtsummary")
install.packages("gtsummary", dependencies = TRUE)
library(lmerTest)
library(lme4)
library(report)
library(gtsummary)
library("gt")
install.packages("gt", dependencies = TRUE)
library(tidyverse)
library(ggplot2)
library(plotly)
library(dplyr)
survey_data <- read.csv('../../../backend/data/database/survey_data.csv')
#dim(survey_data)
glimpse(survey_data)
participants_data <- survey_data %>% distinct(FK_ParticipantId, ParticipantLeaning, TreatmentGroup)
glimpse(participants_data)
# Use the Okabe-Ito color-blind-friendly palette
okabe_ito_palette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# Plot with color-blind-friendly colors
participant_leaning = ggplot(leaning_fact, aes(x = ParticipantLeaning, fill = TreatmentGroup)) +
geom_bar(position = "stack", color = "black", width = 0.5) +
geom_text(
aes(label = after_stat(count)),
stat = "count",
position = position_stack(vjust = 0.5), # Places the label inside each stacked segment
size = 3
) +
scale_fill_manual(values = okabe_ito_palette) + # Apply the Okabe-Ito palette
labs(title = "Participant Leaning Count by Treatment Group",
x = "Participant Leaning",
y = "Count",
fill = "Treatment Group") +
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
participant_leaning
ggsave("participant_leaning_count.pdf",
plot = participant_leaning,   # Use the last plot created
device = "pdf",       # Specify PNG format
width = 10,            # Set width of the PNG (in inches)
height = 5,           # Set height of the PNG (in inches)
units = "in",         # Units for width and height
bg = "white",
dpi = 300)
# Use the Okabe-Ito color-blind-friendly palette
okabe_ito_palette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# Plot with color-blind-friendly colors
participant_leaning = ggplot(leaning_fact, aes(x = ParticipantLeaning, fill = TreatmentGroup)) +
geom_bar(position = "stack", color = "black", width = 0.5) +
geom_text(
aes(label = after_stat(count)),
stat = "count",
position = position_stack(vjust = 0.5), # Places the label inside each stacked segment
size = 3
) +
scale_fill_manual(values = okabe_ito_palette) + # Apply the Okabe-Ito palette
labs(title = "Participant Leaning Count by Intervention Group",
x = "Participant Leaning",
y = "Count",
fill = "Intervention") +
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
participant_leaning
ggsave("participant_leaning_count.pdf",
plot = participant_leaning,   # Use the last plot created
device = "pdf",       # Specify PNG format
width = 10,            # Set width of the PNG (in inches)
height = 5,           # Set height of the PNG (in inches)
units = "in",         # Units for width and height
bg = "white",
dpi = 300)
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.4, width = 1.5, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.8, width = 0.2, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Treatment Group",
y = "DiffLikertTreatedOriginal") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.4, width = 1.5, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.8, width = 0.2, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_boxplot() +
labs(title = "Boxplot of DiffLikertTreatedOriginal by Treatment Group",
x = "Treatment Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Optional custom colors
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),   # Larger title
axis.title = element_text(size = 14),                  # Larger axis titles
axis.text = element_text(size = 12),                   # Larger axis labels
legend.title = element_text(size = 14),                # Larger legend title
legend.text = element_text(size = 12)                  # Larger legend text
)
box_plot
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.4, width = 1.5, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.8, width = 0.2, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.4, width = 1.5, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.0, width = 0.4, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.6, width = 1.5, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.2, width = 0.4, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.6, width = 1.3, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.2, width = 0.4, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.6, width = 1.3, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.25, width = 0.4, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
box_plot2 = ggplot(survey_data, aes(x = TreatmentGroup, y = DiffLikertTreatedOriginal, fill = TreatmentGroup)) +
geom_violin(alpha = 0.6, width = 1.3, color = "black") +  # Violin plot with transparency
geom_boxplot(alpha = 0.4, width = 0.4, color = "black") +  # Boxplot properly aligned to fit inside the violin
labs(title = "DiffLikertTreatedOriginal by Intervention Group",
x = "Intervention Group",
y = "DiffLikertTreatedOriginal",
fill = "Intervention") +
scale_fill_manual(values = c("human" = "#E69F00", "machine" = "#56B4E9", "placebo" = "#009E73")) +  # Custom color palette
theme_grey() +
theme(
plot.title = element_text(size = 18, face = "bold"),  # Title font size and style
axis.title = element_text(size = 14),               # Axis title font size
axis.text = element_text(size = 12),                # Axis text font size
legend.title = element_text(size = 14),             # Legend title font size
legend.text = element_text(size = 12)               # Legend text font size
)
ggsave("boxplot_diff_likert_treated_original-2.pdf",
plot = box_plot2,  # Use the last plot created
device = "pdf",      # Specify PDF format
width = 8,           # Set width of the PDF (in inches)
height = 5,          # Set height of the PDF (in inches)
units = "in",        # Units for width and height
dpi = 300)
box_plot2
library(lmerTest)
library(lme4)
library(report)
survey_data <- read.csv('../../../backend/data/database/survey_data.csv')
survey_data$TreatmentGroup <- as.factor(survey_data$TreatmentGroup)
survey_data$TreatmentGroup <- relevel(survey_data$TreatmentGroup, ref = "machine")
head(survey_data, n = 10)
m_general = glmer(TreatedIsLessPolar ~ TreatmentGroup + (1 | FK_ParticipantId),
data=survey_data, family = "binomial")
summary(m_general)
report(m_general)
